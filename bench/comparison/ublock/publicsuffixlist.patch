diff --git a/bench/comparison/ublock/publicsuffixlist.js b/bench/comparison/ublock/publicsuffixlist.js
index fbe57c9..5874465 100644
--- a/bench/comparison/ublock/publicsuffixlist.js
+++ b/bench/comparison/ublock/publicsuffixlist.js
@@ -40,6 +40,9 @@
 
 */
 
+const fs = require('fs');
+const path = require('path');
+
 /******************************************************************************/
 
 (function(context) {
@@ -529,31 +532,18 @@ const fromSelfie = function(selfie, decoder) {
 // used should the WASM module be unavailable for whatever reason.
 
 const enableWASM = (function() {
-    // The directory from which the current script was fetched should also
-    // contain the related WASM file. The script is fetched from a trusted
-    // location, and consequently so will be the related WASM file.
-    let workingDir;
-    {
-        const url = new URL(document.currentScript.src);
-        const match = /[^\/]+$/.exec(url.pathname);
-        if ( match !== null ) {
-            url.pathname = url.pathname.slice(0, match.index);
-        }
-        workingDir = url.href;
-    }
-
     let memory;
 
     return function() {
         if ( getPublicSuffixPosWASM instanceof Function ) {
-            return Promise.resolve(true);
+            return Promise.reject();
         }
 
         if (
             typeof WebAssembly !== 'object' ||
-            typeof WebAssembly.instantiateStreaming !== 'function'
+            typeof WebAssembly.instantiate !== 'function'
         ) {
-            return Promise.resolve(false);
+            return Promise.reject();
         }
 
         // The wasm code will work only if CPU is natively little-endian,
@@ -562,22 +552,18 @@ const enableWASM = (function() {
         const uint8s = new Uint8Array(uint32s.buffer);
         uint32s[0] = 1;
         if ( uint8s[0] !== 1 ) {
-            return Promise.resolve(false);
+            return Promise.reject();
         }
 
-        return fetch(
-            workingDir + 'wasm/publicsuffixlist.wasm',
-            { mode: 'same-origin' }
-        ).then(response => {
-            const pageCount = pslBuffer8 !== undefined
-                ? pslBuffer8.byteLength + 0xFFFF >>> 16
-                : 1;
-            memory = new WebAssembly.Memory({ initial: pageCount });
-            return WebAssembly.instantiateStreaming(
-                response,
-                { imports: { memory: memory } }
-            );
-        }).then(({ instance }) => {
+        const response = fs.readFileSync(path.resolve(__dirname, './wasm/publicsuffixlist.wasm'));
+        const pageCount = pslBuffer8 !== undefined
+            ? pslBuffer8.byteLength + 0xFFFF >>> 16
+            : 1;
+        memory = new WebAssembly.Memory({ initial: pageCount });
+        return WebAssembly.instantiate(
+            response,
+            { imports: { memory: memory } }
+        ).then(({ instance }) => {
             const curPageCount = memory.buffer.byteLength;
             const newPageCount = pslBuffer8 !== undefined
                 ? pslBuffer8.byteLength + 0xFFFF >>> 16
@@ -599,7 +585,7 @@ const enableWASM = (function() {
             return true;
         }).catch(reason => {
             console.info(reason);
-            return false;
+            throw new Error();
         });
     };
 })();
